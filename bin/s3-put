#!/usr/bin/env bash
#
# Upload a file to S3
# (c) 2015 Chi Vinh Le <cvl@winged.kiwi>
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

set -euo pipefail

readonly PROJECT_PATH=$( cd $(dirname $0) ; cd ../; pwd -P )
readonly SCRIPT_NAME="$(basename $0)"

# Includes
source ${PROJECT_PATH}/lib/s3-common.sh

##
# Print help and exit
# Arguments:
#   $1 int exit code
# Output:
#   string help
##
printUsageAndExitWith() {
  printf "Usage:\n"
  printf "  ${SCRIPT_NAME} [--debug] [-vip] [-c content_type] -T file_to_upload resource_path\n"
  printf "  ${SCRIPT_NAME} -h\n"
  printf "Example:\n"
  printf "  ${SCRIPT_NAME} -k key -s secret -r eu-central-1 -T file.ext -c text/plain /bucket/file.ext\n"
  printf "Options:\n"
  printf "  -c,--content-type\tMIME content type\n"
  printf "  -h,--help\tPrint this help\n"
  printf "  -i,--insecure\tUse http instead of https\n"
  printf "  -p,--public\tGrant public read on uploaded file\n"
  printf "  -T,--upload-file\tPath to file to upload\n"
  printf "     --version\tShow version\n"
  printf "\n"
  printf "Other options used will be passed through to aws-curl directly\n"

  exit $1
}

##
# Parse command line and set global variables
# Arguments:
#   $@ command line
# Sets the following Globals:
#   RESOURCE_PATH         string
#   FILE_TO_UPLOAD        string
#   CONTENT_TYPE          string
#   PUBLISH               bool
#   INSECURE              bool
#   PUBLISH               bool
##
parseCommandLine() {
  # Init globals
  AWS_REGION=${AWS_DEFAULT_REGION:-$(getDefaultRegionFromProfile)}
  FILE_TO_UPLOAD=
  RESOURCE_PATH="https://"
  CURL_OPTS="-X PUT "

  # Parse options
  local remaining=
  local secretKeyFile=
  while [[ $# > 0 ]]; do
    local key="$1"
    case ${key} in
      -h|--help)          printUsageAndExitWith 0;;
      -i|--insecure)      RESOURCE_PATH="http://";;
      -p|--publish)       CURL_OPTS+="-H \"x-amz-acl: public-read\" ";;
      -c|--content-type)  assertArgument $@
                          CURL_OPTS+="-H \"Content-Type: $2\" "; shift;;
      -T|--upload-file)   assertArgument $@; CURL_OPTS+="-T $2 "; shift;;
      -r|--region)        assertArgument $@; AWS_REGION=$2; shift;;
      -*)                 if [[ ${2:0:1} == "-" ]]; then
			    CURL_OPTS+="$1 "
                          else
                            CURL_OPTS+="$1" "$2 "; shift 
			  fi;;
      *)                  remaining="${remaining} \"${key}\"";;
    esac
    shift
  done

  # Set the non-parameters back into the positional parameters ($1 $2 ..)
  eval set -- ${remaining}

  # Parse arguments
  if [[ $# != 1 ]]; then
    err "You need to specify the resource path to upload to e.g. /bucket/file.ext"
    printUsageAndExitWith ${INVALID_USAGE_EXIT_CODE}
  fi

  assertResourcePath $1
  RESOURCE_PATH+=$(convS3RegionToEndpoint "${AWS_REGION}")"$1"
}

##
# Main routine
##
main() {
  checkEnvironment
  parseCommandLine "$@"
  echo "$CURL_OPTS $RESOURCE_PATH" | xargs ./aws-curl
}

main "$@"
